<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:jpa="http://www.springframework.org/schema/data/jpa"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/data/jpa
       http://www.springframework.org/schema/data/jpa/spring-jpa.xsd">

    <context:annotation-config/>

    <!--scans through all the jpa repos-->
    <jpa:repositories base-package="uk.ac.ebi.pride.proteomes.db.core.api"
                      entity-manager-factory-ref="proteomesEntityManagerFactory"
                      transaction-manager-ref="proteomesTransactionManager"/>

    <!--Setup data source using place holder properties-->
    <bean id="proteomesDataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="${pride.prot.jdbc.driver}"/>
        <property name="url" value="${pride.prot.jdbc.url}"/>
        <property name="username" value="${pride.prot.jdbc.user}"/>
        <property name="password" value="${pride.prot.jdbc.password}"/>
        <property name="maxActive" value="6"/>
        <property name="validationQuery" value="select 1 from dual"/>
        <property name="testWhileIdle" value="true"/>
    </bean>

    <tx:annotation-driven transaction-manager="proteomesTransactionManager"/>

    <!--pride-loader beans -->
    <bean id="proteomesEntityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="dataSource" ref="proteomesDataSource"/>
        <property name="persistenceUnitName" value="pride-proteomes-db-core"/>
        <property name="jpaDialect" ref="jpaDialet"/>
        <property name="jpaVendorAdapter" >
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
                <property name="database" value="ORACLE"/>
                <property name="showSql" value="false"/>
                <!--to enable details SQL output for debugging-->
            </bean>
        </property>
        <!-- without these properties the PeptiforAssayPropagator throws LazyInitializationException and/or
          multiple representations of the same entity are being merged. It is a risk, but we couldn't find other way
          without the need to do the eager fetching in the database service layer. The eager fetching it is not an option because
          slows the respense time of the web -->
        <!-- Review the problem in the future if we see inconsistency inside the data. Foe example using jdbc to fetch the primary key of the ids
         to open the session-->

        <property name="jpaProperties">
            <props>
                <prop key="hibernate.enable_lazy_load_no_trans">true</prop>
                <prop key="hibernate.event.merge.entity_copy_observer">allow</prop>
            </props>
        </property>
    </bean>

    <bean id="jpaDialet" class="org.springframework.orm.jpa.vendor.HibernateJpaDialect"/>

    <bean id="peptideRepositoryImpl" class="uk.ac.ebi.pride.proteomes.db.core.api.peptide.PeptideRepositoryImpl">
        <property name="entityManagerFactory" ref="proteomesEntityManagerFactory"/>
    </bean>

    <bean id="proteinRepositoryImpl" class="uk.ac.ebi.pride.proteomes.db.core.api.protein.ProteinRepositoryImpl">
        <property name="entityManagerFactory" ref="proteomesEntityManagerFactory"/>
    </bean>

    <bean id="proteomesTransactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="proteomesEntityManagerFactory"/>
        <property name="jpaDialect">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaDialect"/>
        </property>
    </bean>

    <bean class="org.springframework.orm.hibernate4.HibernateExceptionTranslator"/>

    <!--Common part: Do we need to move it?-->
    <!--job operator for restartability -->
    <bean id="jobOperator" class="org.springframework.batch.core.launch.support.SimpleJobOperator">
        <property name="jobExplorer" ref="jobExplorer" />
        <property name="jobRepository" ref="jobRepository" />
        <property name="jobRegistry" ref="jobRegistry" />
        <property name="jobLauncher" ref="jobLauncher" />
    </bean>

    <bean id="incrementer" class="org.springframework.batch.core.launch.support.RunIdIncrementer"/>

    <bean id="jobExplorer" class="org.springframework.batch.core.explore.support.JobExplorerFactoryBean">
        <property name="dataSource" ref="proteomesDataSource" />
    </bean>

    <bean id="jobRegistry" class="org.springframework.batch.core.configuration.support.MapJobRegistry"/>

    <bean id="jobRegistryBeanPostProcessor" class="org.springframework.batch.core.configuration.support.JobRegistryBeanPostProcessor">
        <property name="jobRegistry" ref="jobRegistry"/>
    </bean>

    <bean id="jobLauncher"
          class="org.springframework.batch.core.launch.support.SimpleJobLauncher">
        <property name="jobRepository" ref="jobRepository"/>
    </bean>

    <bean id="jobRepository"
          class="org.springframework.batch.core.repository.support.JobRepositoryFactoryBean">
        <property name="dataSource" ref="proteomesDataSource"/>
        <property name="transactionManager" ref="proteomesTransactionManager"/>
        <property name="lobHandler" ref="lobHandler"/>
        <property name="isolationLevelForCreate" value="ISOLATION_DEFAULT"/>
    </bean>

    <!--listen to the step execution -->
    <bean id="stepListener" class="uk.ac.ebi.pride.proteomes.pipeline.listener.StepListener"/>

    <!--listen to the step execution -->
    <bean id="writeListener" class="uk.ac.ebi.pride.proteomes.pipeline.listener.WriteListener"/>

    <bean id="lobHandler" class="org.springframework.jdbc.support.lob.DefaultLobHandler"/>

    <!-- bean post-processor for JPA annotations -->
    <bean class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor"/>

    <!-- Set up or detect a System property called "PROTEOMES_ENVIRONMENT" used to construct a properties file on the classpath.  The default is "test".  -->
    <!-- See scripts to have a look how to use this environment -->
    <bean id="proteomesEnvironment"
          class="org.springframework.batch.support.SystemPropertyInitializer">
        <property name="defaultValue" value="test"/>
        <property name="keyName" value="PROTEOMES_ENVIRONMENT"/>
    </bean>

    <bean id="proteomesPlaceholderProperties" class="org.springframework.context.support.PropertySourcesPlaceholderConfigurer" depends-on="proteomesEnvironment">
        <property name="locations" value="classpath:prop/proteomes/pride-proteomes-${PROTEOMES_ENVIRONMENT}.properties"/>
        <property name="ignoreUnresolvablePlaceholders" value="true"/>
        <property name="order" value="1"/>
    </bean>

</beans>
